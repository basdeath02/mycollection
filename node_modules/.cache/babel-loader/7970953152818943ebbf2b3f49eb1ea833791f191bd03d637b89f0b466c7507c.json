{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nconst store = createStore({\n  state() {\n    return {\n      isLoading: false,\n      error: {\n        status: false,\n        message: \"\"\n      },\n      success: {\n        status: false,\n        message: \"\",\n        isCallback: true,\n        callback: () => {}\n      },\n      leftBar: {\n        showLeftBar: false,\n        selectedParentMenu: null,\n        selectedMenu: \"\"\n      },\n      levelPathList: []\n    };\n  },\n  mutations: {\n    setLoading(state, {\n      loading\n    }) {\n      if (!state.success.status && !state.error.status) {\n        state.isLoading = loading;\n      }\n    },\n    setErrorModal(state, {\n      status = true,\n      message = \"\"\n    }) {\n      if (!state.isLoading && !state.success.status) {\n        state.error = {\n          status: status,\n          message: message\n        };\n      }\n    },\n    setSuccessModal(state, {\n      status = true,\n      message = 'Success',\n      isCallback = true,\n      callback = () => {}\n    }) {\n      if (!state.isLoading && !state.error.status) {\n        state.success = {\n          status: status,\n          message: message,\n          isCallback: isCallback,\n          callback: callback\n        };\n      }\n    },\n    setShowLeftBar(state) {\n      state.leftBar.showLeftBar = !state.leftBar.showLeftBar;\n    },\n    setSelectedParentMenu(state, {\n      parentName\n    }) {\n      state.leftBar.selectedParentMenu = parentName;\n    },\n    setSelectedMenu(state, {\n      menuPath\n    }) {\n      state.leftBar.selectedMenu = menuPath;\n    },\n    setLevelList(state, {\n      level = 0,\n      pathName,\n      path,\n      isCurrent = true\n    }) {\n      let levelData = {\n        level: level,\n        pathName: pathName,\n        path: path,\n        isCurrent: isCurrent\n      };\n      if (level == 0) {\n        sessionStorage.removeItem('levelPathList');\n        state.levelPathList = [];\n        state.levelPathList.push(levelData);\n        sessionStorage.setItem('levelPathList', JSON.stringify(state.levelPathList));\n        sessionStorage.setItem(\"selectedMenu\", path);\n      } else {\n        state.levelPathList = JSON.parse(sessionStorage.getItem('levelPathList')) || [];\n        state.levelPathList = state.levelPathList.filter(levelPath => levelPath.level < level);\n        if (state.levelPathList.findIndex(levelPath => levelPath.pathName == pathName) == -1) {\n          state.levelPathList.push(levelData);\n          if (isCurrent) {\n            state.levelPathList.forEach(levelPath => {\n              if (levelPath.pathName != pathName) {\n                levelPath.isCurrent = false;\n              }\n            });\n          }\n        }\n        sessionStorage.setItem('levelPathList', JSON.stringify(state.levelPathList));\n      }\n      state.levelPathList.sort((a, b) => {\n        return a.level - b.level;\n      });\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","store","state","isLoading","error","status","message","success","isCallback","callback","leftBar","showLeftBar","selectedParentMenu","selectedMenu","levelPathList","mutations","setLoading","loading","setErrorModal","setSuccessModal","setShowLeftBar","setSelectedParentMenu","parentName","setSelectedMenu","menuPath","setLevelList","level","pathName","path","isCurrent","levelData","sessionStorage","removeItem","push","setItem","JSON","stringify","parse","getItem","filter","levelPath","findIndex","forEach","sort","a","b"],"sources":["/Users/peeraponchanthacham/Documents/WORKSPACE/collection-frontend/src/store/store.js"],"sourcesContent":["import { createStore } from 'vuex'\r\n\r\nconst store = createStore({\r\n    state() {\r\n        return {\r\n            isLoading: false,\r\n            error: {\r\n                status: false,\r\n                message: \"\"\r\n            },\r\n            success: {\r\n                status: false,\r\n                message: \"\",\r\n                isCallback: true,\r\n                callback: () => { }\r\n            },\r\n            leftBar: {\r\n                showLeftBar: false,\r\n                selectedParentMenu: null,\r\n                selectedMenu: \"\"\r\n            },\r\n            levelPathList: []\r\n        }\r\n    },\r\n    mutations: {\r\n        setLoading(state, { loading }) {\r\n            if (!state.success.status && !state.error.status) {\r\n                state.isLoading = loading\r\n            }\r\n        },\r\n        setErrorModal(state, { status = true, message = \"\" }) {\r\n            if (!state.isLoading && !state.success.status) {\r\n                state.error = {\r\n                    status: status,\r\n                    message: message\r\n                }\r\n            }\r\n        },\r\n        setSuccessModal(state, { status = true, message = 'Success', isCallback = true, callback = () => { } }) {\r\n            if (!state.isLoading && !state.error.status) {\r\n                state.success = {\r\n                    status: status,\r\n                    message: message,\r\n                    isCallback: isCallback,\r\n                    callback: callback\r\n                }\r\n            }\r\n        },\r\n        setShowLeftBar(state) {\r\n            state.leftBar.showLeftBar = !state.leftBar.showLeftBar\r\n        },\r\n        setSelectedParentMenu(state, { parentName }) {\r\n            state.leftBar.selectedParentMenu = parentName;\r\n        },\r\n        setSelectedMenu(state, { menuPath }) {\r\n            state.leftBar.selectedMenu = menuPath;\r\n        },\r\n        setLevelList(state, { level = 0, pathName, path, isCurrent = true }) {\r\n            let levelData = {\r\n                level: level,\r\n                pathName: pathName,\r\n                path: path,\r\n                isCurrent: isCurrent\r\n            }\r\n            if (level == 0) {\r\n                sessionStorage.removeItem('levelPathList')\r\n                state.levelPathList = []\r\n                state.levelPathList.push(levelData)\r\n                sessionStorage.setItem('levelPathList', JSON.stringify(state.levelPathList))\r\n                sessionStorage.setItem(\"selectedMenu\", path);\r\n            } else {\r\n                state.levelPathList = JSON.parse(sessionStorage.getItem('levelPathList')) || []\r\n                state.levelPathList = state.levelPathList.filter((levelPath) => levelPath.level < level)\r\n                if (state.levelPathList.findIndex((levelPath) => levelPath.pathName == pathName) == -1) {\r\n                    state.levelPathList.push(levelData)\r\n                    if (isCurrent) {\r\n                        state.levelPathList.forEach((levelPath) => {\r\n                            if (levelPath.pathName != pathName) {\r\n                                levelPath.isCurrent = false\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                sessionStorage.setItem('levelPathList', JSON.stringify(state.levelPathList))\r\n            }\r\n            state.levelPathList.sort((a, b) => {\r\n                return a.level - b.level;\r\n            })\r\n        }\r\n    }\r\n})\r\n\r\nexport default store"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}